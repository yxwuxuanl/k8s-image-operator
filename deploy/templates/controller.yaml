apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
    spec:
      enableServiceLinks: false
      serviceAccountName: {{ .Release.Name }}
      volumes:
        - name: tls
          secret:
            secretName: {{ .Release.Name }}-webhook-tls
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /tls/tls.crt
              name: tls
              subPath: cert
            - mountPath: /tls/tls.key
              name: tls
              subPath: key
            - mountPath: /tls/ca.crt
              name: tls
              subPath: ca
          env:
            - name: WEBHOOK_CA_CERT_FILE
              value: /tls/ca.crt
            - name: WEBHOOK_SERVICE_NAME
              value: {{ .Release.Name }}
            - name: WEBHOOK_SERVICE_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: WEBHOOK_CERT_DIR
              value: /tls
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    app: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 9443
      targetPort: 9443
  type: ClusterIP