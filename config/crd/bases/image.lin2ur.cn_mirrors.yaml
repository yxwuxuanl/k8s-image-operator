---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: mirrors.image.lin2ur.cn
spec:
  group: image.lin2ur.cn
  names:
    kind: Mirror
    listKind: MirrorList
    plural: mirrors
    singular: mirror
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.images.length
          name: Images
          type: number
        - jsonPath: .status.running
          name: Running
          type: number
        - jsonPath: .status.failed
          name: Failed
          type: number
        - jsonPath: .status.succeeded
          name: Succeeded
          type: number
      name: v1
      schema:
        openAPIV3Schema:
          description: Mirror is the Schema for the mirrors API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: MirrorSpec defines the desired state of Mirror
              properties:
                activeDeadlineSeconds:
                  default: 3600
                  format: int64
                  type: integer
                dockerConfig:
                  description: |-
                    Adapts a Secret into a volume.
                    
                    
                    The contents of the target Secret's Data field will be presented in a volume
                    as files using the keys in the Data field as the file names.
                    Secret volumes support ownership management and SELinux relabeling.
                  properties:
                    defaultMode:
                      description: |-
                        defaultMode is Optional: mode bits used to set permissions on created files by default.
                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                        YAML accepts both octal and decimal values, JSON requires decimal values
                        for mode bits. Defaults to 0644.
                        Directories within the path are not affected by this setting.
                        This might be in conflict with other options that affect the file
                        mode, like fsGroup, and the result can be other mode bits set.
                      format: int32
                      type: integer
                    items:
                      description: |-
                        items If unspecified, each key-value pair in the Data field of the referenced
                        Secret will be projected into the volume as a file whose name is the
                        key and content is the value. If specified, the listed keys will be
                        projected into the specified paths, and unlisted keys will not be
                        present. If a key is specified which is not present in the Secret,
                        the volume setup will error unless it is marked optional. Paths must be
                        relative and may not contain the '..' path or start with '..'.
                      items:
                        description: Maps a string key to a path within a volume.
                        properties:
                          key:
                            description: key is the key to project.
                            type: string
                          mode:
                            description: |-
                              mode is Optional: mode bits used to set permissions on this file.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              If not specified, the volume defaultMode will be used.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            format: int32
                            type: integer
                          path:
                            description: |-
                              path is the relative path of the file to map the key to.
                              May not be an absolute path.
                              May not contain the path element '..'.
                              May not start with the string '..'.
                            type: string
                        required:
                          - key
                          - path
                        type: object
                      type: array
                    optional:
                      description: optional field specify whether the Secret or its
                        keys must be defined
                      type: boolean
                    secretName:
                      description: |-
                        secretName is the name of the secret in the pod's namespace to use.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                      type: string
                  type: object
                httpProxy:
                  type: string
                images:
                  items:
                    properties:
                      platforms:
                        items:
                          type: string
                        type: array
                      source:
                        type: string
                      tags:
                        items:
                          type: string
                        type: array
                      target:
                        type: string
                    required:
                      - source
                      - target
                    type: object
                  type: array
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                parallelism:
                  default: 5
                  format: int32
                  type: integer
                pushUseProxy:
                  type: boolean
                resources:
                  description: ResourceRequirements describes the compute resource requirements.
                  properties:
                    claims:
                      description: |-
                        Claims lists the names of resources, defined in spec.resourceClaims,
                        that are used by this container.
                        
                        
                        This is an alpha field and requires enabling the
                        DynamicResourceAllocation feature gate.
                        
                        
                        This field is immutable. It can only be set for containers.
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        properties:
                          name:
                            description: |-
                              Name must match the name of one entry in pod.spec.resourceClaims of
                              the Pod where this field is used. It makes that resource available
                              inside a container.
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: |-
                        Limits describes the maximum amount of compute resources allowed.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: |-
                        Requests describes the minimum amount of compute resources required.
                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                  type: object
                setSourceAnnotation:
                  type: boolean
                sizeLimit:
                  anyOf:
                    - type: integer
                    - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                verbose:
                  type: boolean
              required:
                - images
              type: object
            status:
              description: MirrorStatus defines the observed state of Mirror
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failed:
                  default: 0
                  format: int32
                  type: integer
                images:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      phase:
                        type: string
                      pod:
                        type: string
                      source:
                        type: string
                      target:
                        type: string
                    required:
                      - lastTransitionTime
                      - phase
                      - source
                      - target
                    type: object
                  type: array
                running:
                  default: 0
                  format: int32
                  type: integer
                succeeded:
                  default: 0
                  format: int32
                  type: integer
              required:
                - failed
                - running
                - succeeded
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: { }
